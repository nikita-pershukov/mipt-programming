#ifndef BOOk_CPP
#define BOOk_CPP
#include "Book.h"
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Book realization
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Create
Book::Book(const char *new_author, const char *new_title, const char *new_publisher, const int new_year, const int new_pages_count, const char *new_content)
{
    author = 0;
    title = 0;
    publisher = 0;
    content = 0;
    year = 0;
    pages_count = 0;
    if (new_author != NULL)
    {
        author = new char[strlen(new_author)];
        title = new char[strlen(new_title)];
        publisher = new char[strlen(new_publisher)];
        content = new char[strlen(new_content)];

        strcpy(author, new_author);
        strcpy(title, new_title);
        strcpy(publisher, new_publisher);
        strcpy(content, new_content);
        year = new_year;
        pages_count = new_pages_count;
    }
}

Book::Book(const Book& a)
{
    if (a.Get_author() != NULL)
    {
        author = new char[strlen(a.Get_author())];
        title = new char[strlen(a.Get_title())];
        publisher = new char[strlen(a.Get_publisher())];
        content = new char[strlen(a.Get_content())];

        strcpy(author, a.Get_author());
        strcpy(title, a.Get_title());
        strcpy(publisher, a.Get_publisher());
        strcpy(content, a.Get_content());
        year = a.Get_year();
        pages_count = a.Get_pages_count();
    }
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Get
char* Book::Get_author() const
{
    return author;
}

char* Book::Get_title() const
{
    return title;
}

char* Book::Get_publisher() const
{
    return publisher;
}

char* Book::Get_content() const
{
    return content;
}

int Book::Get_year() const
{
    return year;
}

int Book::Get_pages_count() const
{
    return pages_count;
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Streams
ostream& operator << (ostream& out, const Book& a)
{
    out << "---------------------------------------" << endl;
    out << "Author" << '\t' << a.Get_author() << endl;
    out << "Title" << '\t' << a.Get_title() << endl;
    out << "Publisher" << '\t' << a.Get_publisher() << endl;
    out << "Year" << '\t' << a.Get_year() << endl;
    out << "Pages count" << '\t' << a.Get_pages_count() << endl;
    out << "Content" << '\t' << a.Get_content() << endl;
    out << "---------------------------------------" << endl;
    return out;
}

istream& operator >> (istream& in, Book& a)
{
    char* new_author = new char[MAX_SIZE];
    char* new_title = new char[MAX_SIZE];
    char* new_publisher = new char[MAX_SIZE];
    char* new_content = new char[MAX_SIZE];
    int new_year;
    int new_pages_count;

    in >> new_author;
    in >> new_title;
    in >> new_publisher;
    in >> new_year;
    in >> new_pages_count;
    in >> new_content;

    a.Set_author(new_author);
    a.Set_title(new_title);
    a.Set_publisher(new_publisher);
    a.Set_content(new_content);
    a.Set_year(new_year);
    a.Set_pages_count(new_pages_count);

    return in;
}

void Book::Print_format(ostream& out)
{
    out << "---------------------------------------" << endl;
    out << "Author" << '\t' << endl;
    out << "Title" << '\t' << endl;
    out << "Publisher" << '\t' << endl;
    out << "Year" << '\t' << endl;
    out << "Pages count" << '\t' << endl;
    out << "Content" << '\t' << endl;
    out << "---------------------------------------" << endl;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Set

void Book::Set_author(char *new_author)
{
    if (author != new_author)
    {
        author = new char[strlen(new_author)];
        strcpy(author, new_author);
    }
    return;
}

void Book::Set_title(char *new_title)
{
    if (title != new_title)
    {
        title = new char[strlen(new_title)];
        strcpy(title, new_title);
    }
    return;
}

void Book::Set_publisher(char *new_publisher)
{
    if (publisher != new_publisher)
    {
        publisher = new char[strlen(new_publisher)];
        strcpy(publisher, new_publisher);
    }
    return;
}

void Book::Set_content(char *new_content)
{
    if (content != new_content)
    {
        content = new char[strlen(new_content)];
        strcpy(content, new_content);
    }
    return;
}

void Book::Set_year(int new_year)
{
    if (year != new_year)
    {
        year = new_year;
    }
    return;
}

void Book::Set_pages_count(int new_pages_count)
{
    if (pages_count != new_pages_count)
    {
        pages_count = new_pages_count;
    }
    return;
}
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Operator
Book& Book::operator = (const Book& a)
{
    if ((*this) == a)
        return *this;
    char* new_author = new char[strlen(a.Get_author())];
    char* new_title = new char[strlen(a.Get_title())];
    char* new_publisher = new char[strlen(a.Get_publisher())];
    char* new_content = new char[strlen(a.Get_content())];
    int new_year = 0;
    int new_pages_count = 0;
    strcpy(new_author, a.Get_author());
    strcpy(new_title, a.Get_title());
    strcpy(new_publisher, a.Get_publisher());
    strcpy(new_content, a.Get_content());
    new_year = a.Get_year();
    new_pages_count = a.Get_pages_count();
    delete[]author;
    delete[]title;
    delete[]publisher;
    delete[]content;
    author = new_author;
    title = new_title;
    publisher = new_publisher;
    content = new_content;
    year = new_year;
    pages_count = new_pages_count;
    return *this;
}

bool Book::operator ==(const Book &a) const
{
    if (strcmp(this->Get_author(), a.Get_author()) != 0)
        return 0;
    if (strcmp(this->Get_content(), a.Get_content()) != 0)
        return 0;
    if (strcmp(this->Get_title(), a.Get_title()) != 0)
        return 0;
    if (strcmp(this->Get_publisher(), a.Get_publisher()) != 0)
        return 0;
    if ((this->Get_year()) != (a.Get_year()))
        return 0;
    if ((this->Get_pages_count()) != (a.Get_pages_count()))
        return 0;
    return 1;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//Delete
Book::~Book()
{
    if (author != NULL)
        delete[]author;
    if (title != NULL)
        delete[]title;
    if (publisher != NULL)
        delete[]publisher;
    if (content != NULL)
        delete[]content;
}

//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#endif // Book_CPP
